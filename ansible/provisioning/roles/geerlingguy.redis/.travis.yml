---
sudo: required

env:
  - distro: centos7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    redis_daemon: redis
  # - distro: fedora24
  #   init: /usr/lib/systemd/systemd
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  #   redis_daemon: redis
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    redis_daemon: redis-server

services:
  - docker

before_install:
  # Pull container.
  - 'sudo docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} geerlingguy/docker-${distro}-ansible:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - idempotence=$(mktemp)
  - sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Make sure Redis is running, and can be stopped and started cleanly.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager status ${redis_daemon}'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager stop ${redis_daemon}'
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm systemctl --no-pager start ${redis_daemon}'

after_failure:
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/redis/redis-server.log'

after_success:
  # Clean up.
  - 'sudo docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
